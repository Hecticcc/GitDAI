rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return isAuthenticated() && exists(/databases/$(database)/documents/user_roles/$(request.auth.uid + '_' + role));
    }
    
    function isAdmin() {
      return hasRole('administrator');
    }
    
    function isStaff() {
      return hasRole('staff') || isAdmin();
    }
    
    function isProjectOwner(projectId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/bot_projects/$(projectId)) &&
             get(/databases/$(database)/documents/bot_projects/$(projectId)).data.userId == request.auth.uid;
    }
    
    // Bot projects collection
    match /bot_projects/{projectId} {
      allow read: if isAuthenticated() && 
                 (resource.data.userId == request.auth.uid || isStaff());
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
                   (resource.data.userId == request.auth.uid || isStaff());
      allow delete: if isProjectOwner(projectId) || isAdmin();
    }

    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId) || isStaff();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isStaff();
      allow delete: if isAdmin();
    }
    
    // Roles collection
    match /roles/{roleId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }
    
    // User roles collection
    match /user_roles/{userRoleId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || (
        isAuthenticated() && 
        userRoleId == request.auth.uid + '_user' && 
        request.resource.data.role == 'user'
      );
      allow update, delete: if isAdmin();
    }
    
    // Pterodactyl user mappings
    match /pterodactyl_users/{pterodactylId} {
      allow read: if isAuthenticated() &&
                 (resource.data.userId == request.auth.uid || isStaff());
      allow create: if isAuthenticated() &&
                   request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAdmin();
    }
    
    // Servers collection
    match /servers/{serverId} {
      allow read: if isAuthenticated() && 
                 (resource.data.userId == request.auth.uid || isStaff());
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
                   (resource.data.userId == request.auth.uid || isStaff());
      allow delete: if isAuthenticated() && 
                   (resource.data.userId == request.auth.uid || isAdmin());
    }
  }
}